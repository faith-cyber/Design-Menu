{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n\n    case 'ADD_FAV':\n      return {\n        favorites: [...state]\n      };\n\n    case 'FETCH_FAILURE':\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchMealDbApi = (initialUrl, initialData) => {\n  _s();\n\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchMeals = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_FAILURE'\n          });\n        }\n      }\n    };\n\n    fetchMeals();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\n_s(useFetchMealDbApi, \"8a4E4SQikF9WcKzJVOsSIfAUuJo=\");\n\nexport default useFetchMealDbApi;","map":{"version":3,"sources":["C:/Users/Faith/Desktop/design/src/components/useFetchMealDbApi.js"],"names":["useState","useEffect","useReducer","axios","dataFetchReducer","state","action","type","isLoading","isError","data","payload","favorites","Error","useFetchMealDbApi","initialUrl","initialData","url","setUrl","dispatch","didCancel","fetchMeals","result","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAJR,OAAP;;AAOF,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,SAAS,EAAE,CAAC,GAAGP,KAAJ;AADN,OAAP;;AAGF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGA,KAAL;AAAYG,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAE;AAAvC,OAAP;;AACF;AACE,YAAM,IAAII,KAAJ,EAAN;AAlBJ;AAoBD,CArBD;;AAuBA,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;AAAA;;AACrD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAACe,UAAD,CAA9B;AAEA,QAAM,CAACV,KAAD,EAAQc,QAAR,IAAoBjB,UAAU,CAACE,gBAAD,EAAmB;AACrDI,IAAAA,SAAS,EAAE,KAD0C;AAErDC,IAAAA,OAAO,EAAE,KAF4C;AAGrDC,IAAAA,IAAI,EAAEM;AAH+C,GAAnB,CAApC;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,SAAS,GAAG,KAAhB;;AACA,UAAMC,UAAU,GAAG,YAAY;AAC7BF,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AAEA,UAAI;AACF,cAAMe,MAAM,GAAG,MAAMnB,KAAK,CAACc,GAAD,CAA1B;;AAEA,YAAI,CAACG,SAAL,EAAgB;AACdD,UAAAA,QAAQ,CAAC;AAAEZ,YAAAA,IAAI,EAAE,eAAR;AAAyBI,YAAAA,OAAO,EAAEW,MAAM,CAACZ;AAAzC,WAAD,CAAR;AACD;AACF,OAND,CAME,OAAOa,KAAP,EAAc;AACd,YAAI,CAACH,SAAL,EAAgB;AACdD,UAAAA,QAAQ,CAAC;AAAEZ,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;AACD;AACF;AACF,KAdD;;AAgBAc,IAAAA,UAAU;AAEV,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACH,GAAD,CAvBM,CAAT;AAyBA,SAAO,CAACZ,KAAD,EAAQa,MAAR,CAAP;AACD,CAnCD;;GAAMJ,iB;;AAqCN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n\n    case 'ADD_FAV':\n      return {\n        favorites: [...state],\n      };\n    case 'FETCH_FAILURE':\n      return { ...state, isLoading: false, isError: true };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchMealDbApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchMeals = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchMeals();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useFetchMealDbApi;\n"]},"metadata":{},"sourceType":"module"}